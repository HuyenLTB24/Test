cmake_minimum_required(VERSION 3.16.0)

project(X2Modern VERSION 1.0.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Windows-specific settings
if(WIN32)
    set(CMAKE_WIN32_EXECUTABLE TRUE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libgcc -static-libstdc++")
endif()

# Enable Qt MOC
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

# Find required Qt5 components for Windows
find_package(Qt5 REQUIRED COMPONENTS 
    Core 
    Widgets 
    Network
    Sql
    WebEngine
    WebEngineWidgets
    Concurrent
)

# Include directories
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

# Source files
set(SOURCES
    src/main.cpp
    src/twitter_bot_gui.cpp
    src/twitter_bot.cpp
    src/database_manager.cpp
    src/account_manager.cpp
    src/bot_worker.cpp
    src/api_manager.cpp
    src/log_manager.cpp
)

# Header files
set(HEADERS
    include/twitter_bot_gui.h
    include/twitter_bot.h
    include/database_manager.h
    include/account_manager.h
    include/bot_worker.h
    include/api_manager.h
    include/settings_manager.h
    include/log_manager.h
    include/constants.h
)

# Create executable
add_executable(X2Modern ${SOURCES} ${HEADERS})

# Link Qt5 libraries
target_link_libraries(X2Modern
    Qt5::Core
    Qt5::Widgets
    Qt5::Network
    Qt5::Sql
    Qt5::WebEngine
    Qt5::WebEngineWidgets
    Qt5::Concurrent
)

# Windows-specific libraries
if(WIN32)
    target_link_libraries(X2Modern
        ws2_32
        winmm
        imm32
        version
    )
endif()

# Set output directory
set_target_properties(X2Modern PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)

# Copy resources
file(COPY resources DESTINATION ${CMAKE_BINARY_DIR})
